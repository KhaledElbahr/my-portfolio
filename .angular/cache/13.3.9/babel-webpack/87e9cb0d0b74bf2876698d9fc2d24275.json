{"ast":null,"code":"import { Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/theme.service\";\nimport * as i2 from \"@angular/cdk/layout\";\nimport * as i3 from \"../shared/header/header.component\";\nimport * as i4 from \"@angular/material/sidenav\";\nimport * as i5 from \"../shared/sidebar/sidebar.component\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"../shared/footer/footer.component\";\nimport * as i8 from \"@angular/common\";\nexport let LayoutComponent = /*#__PURE__*/(() => {\n  class LayoutComponent {\n    constructor(themeService, breakpointObserver) {\n      this.themeService = themeService;\n      this.breakpointObserver = breakpointObserver;\n      this.sideBarOpen = false;\n      this.darkMode = false;\n      this.isHandset$ = this.breakpointObserver.observe([Breakpoints.Handset, Breakpoints.Small, Breakpoints.XSmall]).pipe(map(result => result.matches), shareReplay());\n    }\n\n    ngOnInit() {\n      this.themeService.isDarkTheme.subscribe(dark => this.darkMode = dark);\n    }\n\n    sideBarToggler() {\n      this.sideBarOpen = !this.sideBarOpen;\n    }\n\n  }\n\n  LayoutComponent.ɵfac = function LayoutComponent_Factory(t) {\n    return new (t || LayoutComponent)(i0.ɵɵdirectiveInject(i1.ThemeService), i0.ɵɵdirectiveInject(i2.BreakpointObserver));\n  };\n\n  LayoutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LayoutComponent,\n    selectors: [[\"app-layout\"]],\n    decls: 10,\n    vars: 7,\n    consts: [[1, \"mat-app-background\"], [3, \"sidebar\", \"toggleSideBarForMe\"], [\"fixedInViewport\", \"false\", \"mode\", \"over\", 1, \"sidenav\", 3, \"opened\"]],\n    template: function LayoutComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"app-header\", 1);\n        i0.ɵɵlistener(\"toggleSideBarForMe\", function LayoutComponent_Template_app_header_toggleSideBarForMe_2_listener() {\n          return ctx.sideBarToggler();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-sidenav-container\")(4, \"mat-sidenav\", 2);\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵelement(6, \"app-sidebar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-sidenav-content\");\n        i0.ɵɵelement(8, \"router-outlet\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(9, \"app-footer\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"dark-theme\", ctx.darkMode);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"sidebar\", ctx.sideBarOpen);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"opened\", ctx.sideBarOpen);\n        i0.ɵɵattribute(\"role\", i0.ɵɵpipeBind1(5, 5, ctx.isHandset$) ? \"dialog\" : \"navigation\");\n      }\n    },\n    directives: [i3.HeaderComponent, i4.MatSidenavContainer, i4.MatSidenav, i5.SidebarComponent, i4.MatSidenavContent, i6.RouterOutlet, i7.FooterComponent],\n    pipes: [i8.AsyncPipe],\n    styles: [\"mat-sidenav[_ngcontent-%COMP%]{margin-top:70px;padding-top:30px}.sidenav[_ngcontent-%COMP%]{width:170px;position:fixed;z-index:5}\"]\n  });\n  return LayoutComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}